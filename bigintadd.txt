#include <stdio.h>
#include <string.h> 
int main()
{
	char arr1[205],arr11[205];
	char arr2[205],arr22[205];
	char arr3[201],arr33[205];
	int i; 
	int t = 0;         //t是进位1 用于表示两个数相加后是不是需要进位 
	int k;             //k为arr3过滤掉前导0之后的第一个非零字符的下标 
	scanf("%s", arr1);
	scanf("%s", arr2); 
//先给arr33全部赋初值'0'
	for (i = 0; i < 205; i++)
	{
		arr11[i] = '0';
		arr22[i] = '0';
		arr33[i] = '0';
	} 
	
//倒置arr1为arr11 倒置arr2为arr22 
	for(i = 0; i < strlen(arr1); i++)
	{
		arr11[i] = arr1[strlen(arr1)-i-1];
	}
	for(i = 0; i < strlen(arr2); i++)
	{
		arr22[i] = arr2[strlen(arr2)-i-1];
	} 
// 逐位相加并判断进位 得arr33 
	for(i = 0; i < 201; i++)
	{
	    if(t == 0)
		{ 
		    if(arr11[i]+arr22[i]-96>=10)
		    {
			    arr33[i]=arr11[i]+arr22[i]-48-10+t;
			    t = 1;
			    continue;
	    	}
	    	else
	    	{
	    		arr33[i]=arr11[i]+arr22[i]-48;
	    		t = 0;
	    	}
        }
        if(t == 1)
		{
            if(arr11[i]+arr22[i]-96+1>=10)
            {
               arr33[i]=arr11[i]+arr22[i]-48+1-10;
               t = 1;
	    	}
	    	else
	    	{
	    	    arr33[i]=arr11[i]+arr22[i]-48+t;
	    	    t = 0;
	    	}
        }	
	}
// 再对arr33 进行倒置得arr3 
	for (i = 0; i < 201; i++)
	{
		arr3[i] = arr33[201-i-1];
	}
// 过滤掉前导0 并打印arr3
	for (i = 0; i < 201; i++)
	{
		if(arr3[i]!=48)
		{
			k = i;
			break;
		}
	} 
	for(i = k; i < 201; i++)
	{
		printf("%c", arr3[i]); 
	}
	
	return 0;
}